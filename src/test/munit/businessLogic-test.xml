<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.5.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config doc:name="Munit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:businessLogic.xml"/>
    	<spring:import resource="classpath:config.xml"/>
    	<spring:import resource="classpath:endpoints.xml"/>
    	<spring:import resource="classpath:errorHandling.xml"/>
    </spring:beans>
    <munit:test name="mainFlowTest1" description="Test">
        <mock:when messageProcessor="sfdc:query" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute whereValue-ref="#['query Contacts from Salesforce instance A']" name="doc:name"/>
            </mock:with-attributes>
            <mock:then-return payload-ref="#[['Department':'','Description':'','Email':'fakecontact@gmail.com','FirstName':'Fake','LastModifiedDate':'2014-03-10T13:34:38.000Z','LastName':'Contact','MailingCity':'San Francisco','MailingCountry':'US','MobilePhone':'','Phone':'','Title':'','Account':{'Id':'001n0000003fMWXAA2', 'Name':'Account4Ref', 'AccountNumber':'', 'AccountSource':'', 'AnnualRevenue':'', 'BillingCity':'San Francisco', 'BillingCountry':'', 'BillingPostalCode':'', 'BillingState':'California', 'BillingStreet':'77 Geary Street', 'Description':'', 'Fax':'', 'Industry':'', 'NumberOfEmployees':'10000', 'Ownership':'', 'ParentId':'', 'Phone':'(415) 888-8809', 'Rating':'', 'RecordTypeId':'', 'ShippingCity':'San Francisco', 'ShippingCountry':'', 'ShippingPostalCode':'', 'ShippingState':'', 'ShippingStreet':'77 Geary Street', 'Sic':'', 'SicDesc':'', 'Site':'', 'TickerSymbol':'', 'Type':'', 'Website':''}]]"/>
        </mock:when>
        <mock:when doc:name="Mock" messageProcessor="sfdc:query-single">
            <mock:with-attributes>
                <mock:with-attribute whereValue-ref="#[string:upsert contacts in org B]" name="doc:name"/>
            </mock:with-attributes>
            <mock:then-return payload-ref="#[null]"/>
        </mock:when>
        <mock:when messageProcessor="sfdc:upsert" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute whereValue-ref="#[string:upsert contacts in org B]" name="doc:name"/>
            </mock:with-attributes>
            <mock:then-return payload-ref="#[]"/>
        </mock:when>
        <mock:when messageProcessor="smtp:outbound-endpoint" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute whereValue-ref="#[string:send mail]" name="doc:name"/>
            </mock:with-attributes>
            <mock:then-return payload-ref="#[]"/>
        </mock:when>
        <flow-ref name="mainFlow" doc:name="Flow-ref to mainFlow"/>
<!--         <mock:verify-call messageProcessor="sfdc:query"  doc:name="Verify Call"> -->
<!--             <mock:attributes> -->
<!--                 <mock:attribute whereValue-ref="#['query Contacts from Salesforce instance A']" name="doc:name"/> -->
<!--             </mock:attributes> -->
<!--         </mock:verify-call> -->
<!--         <mock:verify-call messageProcessor="sfdc:query-single" doc:name="Verify Call"> -->
<!--             <mock:attributes> -->
<!--                 <mock:attribute whereValue-ref="#[string:query contact in Salesforce instance B]" name="doc:name"/> -->
<!--             </mock:attributes> -->
<!--         </mock:verify-call> -->
<!--         <mock:verify-call messageProcessor="sfdc:upsert" doc:name="Verify Call"> -->
<!--             <mock:attributes> -->
<!--                 <mock:attribute whereValue-ref="#['upsert contacts in org B']" name="doc:name"/> -->
<!--             </mock:attributes> -->
<!--         </mock:verify-call> -->
    </munit:test>
    
    
</mule>
